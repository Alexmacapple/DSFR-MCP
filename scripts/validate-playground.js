#!/usr/bin/env node
/**
 * Script de validation du playground DSFR
 * Utilise le service de validation pour analyser la conformit√©
 */

const fs = require('fs');
const path = require('path');
const ValidationService = require('../src/services/validation');

async function validatePlayground() {
  console.log('üîç Validation du playground DSFR-MCP...\n');
  
  try {
    // Charger le fichier playground.html
    const playgroundPath = path.join(__dirname, '../public/playground.html');
    const htmlContent = fs.readFileSync(playgroundPath, 'utf-8');
    
    console.log(`üìÑ Fichier charg√©: ${playgroundPath}`);
    console.log(`üìè Taille: ${htmlContent.length} caract√®res\n`);
    
    // Initialiser le service de validation
    const validationService = new ValidationService();
    
    // Effectuer la validation compl√®te
    console.log('üèÅ D√©but de la validation...\n');
    
    const results = await validationService.validateHTMLCore({
      html_code: htmlContent,
      check_accessibility: true,
      check_semantic: true,
      strict_mode: true
    });
    
    // Afficher les r√©sultats
    console.log('‚ïê'.repeat(60));
    console.log('üìä R√âSULTATS DE VALIDATION DSFR');
    console.log('‚ïê'.repeat(60));
    
    // Score global
    console.log(`\n‚ú® Score global: ${results.score}/100`);
    console.log(`üìã Statut: ${results.valid ? '‚úÖ VALIDE' : '‚ùå NON VALIDE'}\n`);
    
    // Statistiques
    console.log('üìà Statistiques:');
    console.log(`   ‚Ä¢ Erreurs: ${results.errors.length}`);
    console.log(`   ‚Ä¢ Avertissements: ${results.warnings.length}`);
    console.log(`   ‚Ä¢ Suggestions: ${results.suggestions.length}\n`);
    
    // D√©tails des erreurs
    if (results.errors.length > 0) {
      console.log('‚ùå ERREURS CRITIQUES:');
      console.log('‚îÄ'.repeat(60));
      results.errors.forEach((error, index) => {
        console.log(`${index + 1}. [${error.type}] ${error.message}`);
      });
      console.log();
    }
    
    // Avertissements
    if (results.warnings.length > 0) {
      console.log('‚ö†Ô∏è  AVERTISSEMENTS:');
      console.log('‚îÄ'.repeat(60));
      results.warnings.forEach((warning, index) => {
        console.log(`${index + 1}. [${warning.type}] ${warning.message}`);
      });
      console.log();
    }
    
    // Suggestions
    if (results.suggestions.length > 0) {
      console.log('üí° SUGGESTIONS:');
      console.log('‚îÄ'.repeat(60));
      results.suggestions.forEach((suggestion, index) => {
        console.log(`${index + 1}. [${suggestion.type}] ${suggestion.message}`);
      });
      console.log();
    }
    
    // Analyse des am√©liorations r√©ussies
    console.log('‚ïê'.repeat(60));
    console.log('üéØ ANALYSE DES AM√âLIORATIONS R√âUSSIES');
    console.log('‚ïê'.repeat(60));
    
    // V√©rifications sp√©cifiques des optimisations
    const optimizations = analyzeOptimizations(htmlContent);
    
    console.log('\n‚úÖ Points de conformit√© valid√©s:');
    optimizations.forEach((opt, index) => {
      console.log(`${index + 1}. ${opt}`);
    });
    
    // Recommandations finales
    console.log('\n‚ïê'.repeat(60));
    console.log('üìù RECOMMANDATIONS');
    console.log('‚ïê'.repeat(60));
    
    if (results.score >= 90) {
      console.log('\nüèÜ Excellent travail ! Le playground respecte tr√®s bien les standards DSFR.');
      console.log('   Continuez √† maintenir cette qualit√© lors des futures √©volutions.');
    } else if (results.score >= 70) {
      console.log('\nüëç Bon travail ! Le playground respecte globalement les standards DSFR.');
      console.log('   Quelques am√©liorations mineures peuvent encore √™tre apport√©es.');
    } else {
      console.log('\n‚ö†Ô∏è  Des am√©liorations importantes sont n√©cessaires pour respecter pleinement les standards DSFR.');
      console.log('   Priorisez la correction des erreurs critiques.');
    }
    
    console.log('\n‚ú® Validation termin√©e avec succ√®s !\n');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la validation:', error.message);
    process.exit(1);
  }
}

/**
 * Analyse les optimisations sp√©cifiques r√©ussies
 */
function analyzeOptimizations(htmlContent) {
  const optimizations = [];
  
  // V√©rifier l'utilisation des ic√¥nes DSFR
  if (htmlContent.includes('fr-icon-') && !htmlContent.includes('üéØ') && !htmlContent.includes('üîç')) {
    optimizations.push('‚úÖ Utilisation correcte des ic√¥nes DSFR (fr-icon-*) au lieu d\'emojis dans les √©l√©ments interactifs');
  }
  
  // V√©rifier les attributs ARIA
  if (htmlContent.includes('aria-label') && htmlContent.includes('aria-pressed')) {
    optimizations.push('‚úÖ Attributs ARIA correctement impl√©ment√©s pour l\'accessibilit√©');
  }
  
  // V√©rifier les r√¥les ARIA
  if (htmlContent.includes('role="button"') && htmlContent.includes('role="region"')) {
    optimizations.push('‚úÖ R√¥les ARIA appropri√©s pour les √©l√©ments interactifs');
  }
  
  // V√©rifier la structure s√©mantique
  if (htmlContent.includes('<header') && htmlContent.includes('<main') && htmlContent.includes('<footer')) {
    optimizations.push('‚úÖ Structure s√©mantique HTML5 compl√®te (header, main, footer)');
  }
  
  // V√©rifier les classes DSFR
  if (htmlContent.includes('fr-container') && htmlContent.includes('fr-grid-row')) {
    optimizations.push('‚úÖ Syst√®me de grille DSFR correctement utilis√©');
  }
  
  // V√©rifier l'accessibilit√© des formulaires
  if (htmlContent.includes('for=') && htmlContent.includes('aria-describedby')) {
    optimizations.push('‚úÖ Labels et descriptions de formulaires accessibles');
  }
  
  // V√©rifier le support clavier
  if (htmlContent.includes('tabindex=') && htmlContent.includes('onkeydown')) {
    optimizations.push('‚úÖ Navigation au clavier impl√©ment√©e pour tous les √©l√©ments interactifs');
  }
  
  // V√©rifier les notifications accessibles
  if (htmlContent.includes('aria-live="polite"') || htmlContent.includes('role="alert"')) {
    optimizations.push('‚úÖ Notifications accessibles avec aria-live ou role="alert"');
  }
  
  // V√©rifier l'optimisation des performances
  if (htmlContent.includes('defer') || htmlContent.includes('async')) {
    optimizations.push('‚úÖ Scripts optimis√©s avec defer/async pour les performances');
  }
  
  // V√©rifier la meta viewport
  if (htmlContent.includes('viewport') && htmlContent.includes('width=device-width')) {
    optimizations.push('‚úÖ Meta viewport correctement configur√©e pour le responsive');
  }
  
  // V√©rifier les badges et indicateurs
  if (htmlContent.includes('fr-badge') && htmlContent.includes('fr-badge--success')) {
    optimizations.push('‚úÖ Composants badge DSFR utilis√©s pour les indicateurs');
  }
  
  // V√©rifier l'utilisation des couleurs DSFR
  if (htmlContent.includes('var(--blue-france') || htmlContent.includes('var(--grey-')) {
    optimizations.push('‚úÖ Variables CSS DSFR utilis√©es pour les couleurs');
  }
  
  return optimizations;
}

// Ex√©cuter la validation
validatePlayground();